<?xml version="1.0"?>

<launch>
  <arg name="hil" default="true"/>
  <arg name="scene" default="$(find sensors_si2019)/scenes/pid.xml"/>
  <arg name="debug" default="false"/>

  <!-- local_origin tf is the ENU origin. Mavros will public the NED frame named local_origin_ned --> 

  <!-- see https://github.com/mavlink/mavros/blob/de9f39a719b091b8448214a17d27b3b1c415d0dc/mavros/src/lib/uas_data.cpp#L55 
   	publish_static_transform("local_origin", "local_origin_ned", Eigen::Affine3d(ftf::quaternion_from_rpy(M_PI, 0, M_PI_2)));
	publish_static_transform("fcu", "fcu_frd", Eigen::Affine3d(ftf::quaternion_from_rpy(M_PI, 0, 0)));
  -->
  <node unless="$(arg hil)" pkg="tf2_ros" type="static_transform_publisher" name="enu_to_ned" required="true" output="screen" args="0 0 0 1.5707963267948966 0 3.141592653589793 local_origin local_origin_ned"/> 

  <node pkg="tf2_ros" type="static_transform_publisher" name="cuba2_world_local_origin_broadcaster" required="true" output="screen" args="0 0 -54.3 -1.578 0 0 world local_origin"/> 

  <node unless="$(arg debug)" pkg="uwsim" type="uwsim" name="uwsim_cuba" output="screen" required="true" args="--configfile $(arg scene) --dataPath $(find uwsim)/data/scenes/"/>

  <node pkg="uwsim" type="followMarker" name="bluerov2_follow_marker" required="true" output="screen" args="/bluerov2_ghost/odom 0 1.5 -5 3.1416 0 1.57 0.01 0.7 0 0 1" /> 

  <node pkg="wireless_ardusub" type="tfToPosePublisher" name="hil_pose_publisher" required="true" output="screen"> 
        <param name="target_tf" value="erov" type="string"/>
	<param name="target_topic" value="/bluerov2/pose" type="string"/>
  </node>

</launch>
